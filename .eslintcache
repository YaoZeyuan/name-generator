[{"F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\index.js":"1","F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\reportWebVitals.js":"2","F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\App.tsx":"3","F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\mock.ts":"4"},{"size":504,"mtime":1609906652255,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1609905040997,"results":"7","hashOfConfig":"6"},{"size":8262,"mtime":1609907827145,"results":"8","hashOfConfig":"6"},{"size":3490,"mtime":1609907372966,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1sop6qs",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":8,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\index.js",[],["21","22"],"F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\reportWebVitals.js",[],"F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\App.tsx",["23","24","25","26","27","28","29","30","31","32","33","34"],"import React, { ReactNodeArray, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport \"./index.less\";\nimport { getOrderList } from \"./mock\";\n\ntype TypeOrderItem = {\n  ctime: \"2020-12-14 15:00:33\" | string;\n  overTime: \"2020-12-14 15:30:33\" | string;\n  orderNo: \"W1607929233667375996\" | string;\n  amount: 1.0 | number;\n  originAmount: 1.0 | number;\n  status: \"排队中\" | string;\n  taskName: \"北京市石景山区远洋山水\" | string;\n  unitPrice: 11965 | number;\n  totalPrice: 120 | number;\n  taskId: \"W1607929233667375996\" | string;\n  reportParam: {\n    cityName: \"北京市\" | string;\n    resblockName: \"远洋山水\" | string;\n    roomCnt: \"11\" | string;\n    toiletCnt: \"1\" | string;\n    parlorCnt: \"1\" | string;\n    floor: \"23\" | string;\n    direction: \"100500000003\" | string;\n    area: 100.0 | number;\n    buildingNumber: null | number;\n    unitNumber: null | number;\n    houseNumber: null | number;\n    floorCnt: \"28\" | string;\n    cityId: 11 | number;\n    refurbish: null | number;\n    resblockId: 1111027382206 | number;\n    district: null | number;\n    totalPrice: 675.12 | number;\n    unitPrice: 98765 | number;\n  };\n  percent: 0 | number;\n};\n\nconst URI_Not_Login =\n  \"https://img.ljcdn.com/beike/open-platform-mp/1599123821288.png\";\nconst URI_No_Order =\n  \"https://img.ljcdn.com/beike/open-platform-mp/1599123821346.png\";\n\nconst Const_Page_Size = 10;\nlet forceUpdateCounter = 0;\n\nfunction page() {\n  let [isLogin] = useState<boolean>(true);\n  let [currentNavIndex, setCurrentNavIndex] = useState<number>(0);\n  let [orderList, setOrderList] = useState<TypeOrderItem[]>([]);\n  let [isLoading, setIsLoading] = useState<boolean>(false);\n  // 是否有进行中的订单, 若有, 则每3秒更新一次前10个订单列表\n  let [maxPage, setMaxPage] = useState<number>(0);\n  let [currentPageNum, setCurrentPageNum] = useState<number>(1);\n\n  const [] = useState(0);\n\n  let request_GetOrderList = async (type: number, init = false) => {\n    // 没有下拉刷新功能, 因此也不需要传入pageSize参数\n    // @todo(yaozeyuan) 需要和产品说明, 由于小程序暂时不支持下拉刷新功能, 因此临时屏蔽掉. 后续添加该功能后可以再加回来\n\n    if (init) {\n      // 初始化载入页面, 页码从1开始, 后续会加1, 所以这里设为0\n      currentPageNum = 0;\n    }\n    // 获取下一页的数据\n    currentPageNum = currentPageNum + 1;\n    setCurrentPageNum(currentPageNum);\n\n    setIsLoading(true);\n\n    // let params = new URLSearchParams();\n    // params.set('pageNum', `${currentPageNum}`);\n    // params.set('type', `${type}`);\n    // params.set('pageSize', `${pageSize}`);\n\n    // let response: any = await PromiseBk.asyncGet(ApiUrl.list + `?${strParams}`).catch(() => {\n    //   return {};\n    // });\n\n    setIsLoading(false);\n\n    // if (response.code === 0) {\n    if (init) {\n      orderList = [];\n    }\n    let newOrderList = getOrderList(currentNavIndex);\n    orderList = orderList.concat(newOrderList);\n    setOrderList(orderList);\n    setMaxPage(maxPage);\n    // }\n  };\n\n  let request_GetMoreOrderList = async () => {\n    if (!isLoading) {\n      if (currentPageNum >= maxPage) {\n        return;\n      }\n      if (isLogin === false) {\n        return;\n      }\n      request_GetOrderList(currentNavIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (isLogin) {\n      // 切换tab/初始化页面后自动清空订单&初始化数据\n      request_GetOrderList(currentNavIndex, true);\n    }\n  }, [currentNavIndex, isLogin]);\n\n  let navTabList = [\n    {\n      name: \"全部\",\n      id: 0,\n    },\n    {\n      name: \"已支付\",\n      id: 1,\n    },\n    {\n      name: \"待支付\",\n      id: 2,\n    },\n  ];\n\n  let navEleList = [];\n  for (let i = 0; i < navTabList.length; i++) {\n    let ele = (\n      <div\n        onClick={() => {\n          setCurrentNavIndex(i);\n        }}\n        key={`${i}-${forceUpdateCounter}`}\n        className={classnames(\"nav-item\", {\n          \"current-nav\": i === currentNavIndex,\n        })}\n      >\n        {navTabList[i].name}\n      </div>\n    );\n    navEleList.push(ele);\n  }\n  let navEleClassNameList = [];\n  for (let i = 0; i < navTabList.length; i++) {\n    let name = \"nav-item\";\n    if (i === currentNavIndex) {\n      name = `${name} current-nav`;\n    }\n\n    navEleClassNameList.push(name);\n  }\n\n  console.log(\"navEleClassNameList => \", navEleClassNameList);\n  let placeholderPageEle = (\n    <div key=\"empty-box\" className=\"empty-box\">\n      <img\n        className=\"empty-image\"\n        src={isLogin ? URI_No_Order : URI_Not_Login}\n      />\n      <span className=\"empty-text\">\n        {isLogin\n          ? \"暂无报告，快去首页生成你的房屋分析报告吧~\"\n          : \"登录后可查看~\"}\n      </span>\n    </div>\n  );\n\n  // @todo\n  // bug复现方法: 如果所有order.orderNo相同, 则不会更新界面\n  // 目前临时改为永不重复的递增orderNo, 没看到复现\n  // 明天继续研究\n  let orderEleList: ReactNodeArray = [];\n  for (let order of orderList) {\n    let orderItemEle = (\n      <div\n        key={`order-no-${order.orderNo}-${forceUpdateCounter}`}\n        data-key={`order-no-${order.orderNo}-${forceUpdateCounter}`}\n        data-key-1={`order-no-${order.orderNo}-${forceUpdateCounter}`}\n        data-key-2={`order-no-${order.orderNo}-${forceUpdateCounter}`}\n        data-key-3={`order-no-${order.orderNo}-${forceUpdateCounter}`}\n        className=\"order-item\"\n      >\n        <span>{order.totalPrice}</span>\n        <span className=\"price-unit\">万</span>\n      </div>\n    );\n    orderEleList.push(orderItemEle);\n  }\n\n  if (orderEleList.length === 0) {\n    orderEleList.push(placeholderPageEle);\n  }\n\n  // 生成页尾元素\n  let footerEle = null;\n  if (orderList?.length > 0) {\n    // 只有当有订单数据时才展示页尾元素\n    if (currentPageNum >= maxPage) {\n      footerEle = <div className=\"no-data-text\">没有更多数据了</div>;\n    } else {\n      footerEle = (\n        <div\n          className=\"load-more\"\n          onClick={() => {\n            request_GetMoreOrderList();\n          }}\n        >\n          加载更多\n        </div>\n      );\n    }\n  }\n\n  // @todo(yaozeyuan) 底层渲染引擎存在bug\n  let navEle = (\n    <div\n      className=\"nav-bar\"\n      data-key={`nav-ele-${forceUpdateCounter}-${currentNavIndex}`}\n      key={`nav-ele-${forceUpdateCounter}-${currentNavIndex}`}\n    >\n      <div\n        onClick={() => {\n          setCurrentNavIndex(0);\n        }}\n        key={`${0}-${forceUpdateCounter}`}\n        className={navEleClassNameList[0]}\n      >\n        {navTabList[0].name}\n      </div>\n      <div\n        onClick={() => {\n          setCurrentNavIndex(1);\n        }}\n        key={`${1}-${forceUpdateCounter}`}\n        className={navEleClassNameList[1]}\n      >\n        {navTabList[1].name}\n      </div>\n      <div\n        onClick={() => {\n          setCurrentNavIndex(2);\n        }}\n        key={`${2}-${forceUpdateCounter}`}\n        className={navEleClassNameList[2]}\n      >\n        {navTabList[2].name}\n      </div>\n    </div>\n  );\n\n  // @todo(yaozeyuan) 这里有个bug, 如果为注释中代码, 当从10个订单tab切换到没有订单的tab时, html只会删除最后一个order-item, 替换成placeholder, 其余9个不会删除. 这属于底层代码中的bug, 需要长时间修复\n  let newItem = (\n    <div className=\"order-list\" key={`nav-tab-${currentNavIndex}`}>\n      {orderEleList}\n      {footerEle}\n    </div>\n  );\n  // let newItem =\n  //   orderList.length === 0 ? (\n  //     <div key={forceUpdateCounter}>\n  //       {navEle}\n  //       <div className=\"order-list\" key={`nav-tab-${currentNavIndex}-${forceUpdateCounter}`}>\n  //         {placeholderPageEle}\n  //       </div>\n  //     </div>\n  //   ) : (\n  //     <div key={forceUpdateCounter}>\n  //       {navEle}\n  //       <div className=\"order-list\" key={`nav-tab-${currentNavIndex}-${forceUpdateCounter}`}>\n  //         {orderEleList}\n  //         {footerEle}\n  //       </div>\n  //     </div>\n  //   );\n  console.log(\"yzy orderList\", orderList);\n\n  return (\n    <div className=\"page-user-center\">\n      <div className=\"body\">\n        <div className=\"report-title\">房屋价值分析报告</div>\n        {navEle}\n        {newItem}\n      </div>\n    </div>\n  );\n}\nexport default page;\n",["35","36"],"F:\\www\\basic_framework\\debug-项目\\react-std-app\\src\\mock.ts",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":45,"column":7,"nodeType":"44","messageId":"45","endLine":45,"endColumn":22},{"ruleId":"46","severity":2,"message":"47","line":49,"column":19,"nodeType":"44","endLine":49,"endColumn":27},{"ruleId":"46","severity":2,"message":"47","line":50,"column":47,"nodeType":"44","endLine":50,"endColumn":55},{"ruleId":"46","severity":2,"message":"47","line":51,"column":35,"nodeType":"44","endLine":51,"endColumn":43},{"ruleId":"46","severity":2,"message":"47","line":52,"column":35,"nodeType":"44","endLine":52,"endColumn":43},{"ruleId":"46","severity":2,"message":"47","line":54,"column":31,"nodeType":"44","endLine":54,"endColumn":39},{"ruleId":"46","severity":2,"message":"47","line":55,"column":45,"nodeType":"44","endLine":55,"endColumn":53},{"ruleId":"48","severity":1,"message":"49","line":57,"column":9,"nodeType":"50","messageId":"51","endLine":57,"endColumn":11},{"ruleId":"46","severity":2,"message":"47","line":57,"column":14,"nodeType":"44","endLine":57,"endColumn":22},{"ruleId":"46","severity":2,"message":"52","line":107,"column":3,"nodeType":"44","endLine":107,"endColumn":12},{"ruleId":"53","severity":1,"message":"54","line":112,"column":6,"nodeType":"55","endLine":112,"endColumn":32,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":159,"column":7,"nodeType":"59","endLine":162,"endColumn":9},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"60","severity":1,"message":"61","line":121,"column":35,"nodeType":"62","messageId":"63","endLine":125,"endColumn":6},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'Const_Page_Size' is assigned a value but never used.","Identifier","unusedVar","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"page\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","React Hook \"useEffect\" is called in function \"page\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'request_GetOrderList'. Either include it or remove the dependency array.","ArrayExpression",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'globalOrderCounter'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [currentNavIndex, isLogin, request_GetOrderList]",{"range":"69","text":"70"},[3168,3194],"[currentNavIndex, isLogin, request_GetOrderList]"]